@charset "UTF-8";
/* 加载全局变量
-------------------------- */
/* Color
-------------------------- */
/* 字体
-------------------------- */
/* 按钮 Button
-------------------------- */
/* 表格 Table
-------------------------- */
/* 布局 Layout 框架整体布局
-------------------------- */
/* 导航 Nav
-------------------------- */
/* 页码 laypage
-------------------------- */
/* Tab
-------------------------- */
/* Checkbox 多选框
-------------------------- */
/* 单选项 Radio
-------------------------- */
/* 下拉选择 Select
-------------------------- */
/* 上传 Upload
-------------------------- */
/* 树 tree
-------------------------- */
/* 折叠面板 Collapse
-------------------------- */
/* 滑条 Slider
-------------------------- */
/* Transfer 转移
-------------------------- */
/* BEM support Func
 -------------------------- */
/* Placeholder
 -------------------------- */
/* BEM
 -------------------------- */
/** 树组件 By star1029 **/
.layui-tree {
    line-height: 22px;
}

.layui-tree .layui-form-checkbox {
    margin: 0 !important;
}

.layui-tree-set {
    width: 100%;
    position: relative;
}

.layui-tree-pack {
    display: none;
    padding-left: 20px;
    position: relative;
}

.layui-tree-line .layui-tree-pack {
    padding-left: 27px;
}

.layui-tree-line .layui-tree-set .layui-tree-set:after {
    content: '';
    position: absolute;
    top: 14px;
    left: -9px;
    width: 17px;
    height: 0;
    border-top: 1px dotted #c0c4cc;
}

.layui-tree-line .layui-tree-set:before {
    content: '';
    position: absolute;
    top: 0;
    left: -9px;
    width: 0;
    height: 100%;
    border-left: 1px dotted #c0c4cc;
}

.layui-tree-line .layui-tree-set.layui-tree-setLineShort:before {
    height: 13px;
}

.layui-tree-line .layui-tree-set.layui-tree-setHide:before {
    height: 0;
}

.layui-tree-line .layui-tree-entry:hover {
    background-color: rgba(0, 0, 0, 0);
}

.layui-tree-line .layui-tree-entry:hover .layui-tree-txt {
    color: #1890ff;
    transition: 0.3s;
}

.layui-tree-entry {
    position: relative;
    padding: 3px 0;
    height: 20px;
    white-space: nowrap;
}

.layui-tree-entry:hover {
    background-color: #eee;
}

.layui-tree-entry:hover .layui-tree-btnGroup {
    visibility: visible;
}

.layui-tree-main {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    padding-right: 10px;
}

.layui-tree-iconClick {
    display: inline-block;
    vertical-align: middle;
    position: relative;
    height: 20px;
    line-height: 20px;
    margin: 0 10px;
    color: #c0c4cc;
}

.layui-tree-iconClick .layui-icon {
    font-size: 18px;
}

.layui-tree-icon {
    height: 15px;
    line-height: 12px;
    width: 15px;
    text-align: center;
    border: 1px solid #e8e8e8;
}

.layui-tree-icon .layui-icon {
    font-size: 12px;
    color: #666;
}

.layui-tree-iconArrow {
    padding: 0 5px;
}

.layui-tree-iconArrow:after {
    content: '';
    position: absolute;
    left: 4px;
    top: 3px;
    z-index: 100;
    width: 0;
    height: 0;
    border-width: 5px;
    border-style: solid;
    border-color: transparent transparent transparent #c0c4cc;
    transition: 0.5s;
}

.layui-tree-spread > .layui-tree-entry > .layui-tree-iconClick > .layui-tree-iconArrow:after {
    transform: rotate(90deg) translate(3px, 4px);
}

.layui-tree-text {
    display: inline-block;
    vertical-align: middle;
    color: #555;
}

.layui-tree-search {
    margin-bottom: 15px;
    color: #666;
}

.layui-tree-btnGroup {
    visibility: hidden;
    display: inline-block;
    vertical-align: middle;
    position: relative;
}

.layui-tree-btnGroup .layui-icon {
    display: inline-block;
    vertical-align: middle;
    padding: 0 2px;
    cursor: pointer;
}

.layui-tree-btnGroup .layui-icon:hover {
    color: #999;
    transition: 0.3s;
}

.layui-tree-editInput {
    position: relative;
    display: inline-block;
    vertical-align: middle;
    height: 20px;
    line-height: 20px;
    padding: 0 3px;
    border: none;
    background-color: rgba(0, 0, 0, 0.05);
}

.layui-tree-emptyText {
    text-align: center;
    color: #999;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

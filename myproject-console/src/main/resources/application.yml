server:
  port: 8090
spring:
  profiles:
    active: '@profileActive@'
  application:
    name: myproject-console
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
    property-naming-strategy: LOWER_CAMEL_CASE
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB
  freemarker:
      cache: false
#      所有视图的requestContext属性的名称
      request-context-attribute: site
#      false是否应在与模板合并之前将所有请求属性添加到模型中
      expose-request-attributes: true
      settings:
        api_builtin_enabled: true
        object_wrapper: freemarker.ext.beans.BeansWrapper
        number_format: 0.##
        classic_compatible: true
  mvc:
    view:
      prefix: /templates/
#     rabbitMQ配置
  rabbitmq:
    port: 5672
    host: localhost
    virtual-host: /
    username: guest
    password: guest
    publisher-confirms: true
    publisher-returns: true
    # 对 rabbitmqTemplate 进行监听,当消息由于server的原因无法到达queue时，就会被监听到，以便执行ReturnCallback方法
    # 默认为false,Server端会自动删除不可达消息
    template:
      mandatory: true
# 消费端手动确认
    listener:
      simple:
        acknowledge-mode: manual
# 并发消费
        concurrency: 5
        max-concurrency: 10

mybatis:
    type-aliases-package: com.myproject.pojo.po
    mapper-locations: classpath:/mybatis/*.xml,classpath*:com/gitee/sunchenbin/mybatis/actable/mapping/common/*.xml
    configuration:
    #下划线的表字段映射为驼峰格式的实体类属性
      map-underscore-to-camel-case: true
      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    table:
      auto: update #update、none
    model:
      pack: ${mybatis.type-aliases-package}
    type-handlers-package: com.myproject.config.mybatis.type
#TkMapper地址
mapper:
  mappers:
    - tk.mybatis.mapper.common.Mapper
  not-empty: false
  identity: MYSQL
#分页助手
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

#shiro
shiro:
  web:
    enabled: true
  loginUrl: /console/login
  successUrl: /console/index
  unauthorizedUrl: /console/unauthorized
